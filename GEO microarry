rm(list = ls())
options(stringsAsFactors = F)
library(GEOquery)
gse = "GSE42872"
eSet <- getGEO(gse, 
               destdir = '.', 
               getGPL = F)
#(1)提取表达矩阵exp
exp <- exprs(eSet[[1]])
exp[1:4,1:4]
#exp = log2(exp+1)
#(2)提取临床信息
pd <- pData(eSet[[1]])
#(3)调整pd的行名顺序与exp列名完全一致
p = identical(rownames(pd),colnames(exp));p
if(!p) exp = exp[,match(rownames(pd),colnames(exp))]
#(4)提取芯片平台编号
gpl <- eSet[[1]]@annotation
save(gse,pd,exp,gpl,file = "step1output.Rdata")
#1.下载supplyment的cel文件并读取
library(oligo)
library(GEOquery)
library(affy)
gse="GSE36895"
getGEOSuppFiles(gse)
setwd("GSE85258/")
dir()
untar(paste0(gse, "_RAW.tar"))
files <- dir(pattern="gz$")
sapply(files, gunzip)
filelist <- dir(pattern="cel$")
affyRaw <- read.celfiles(filelist)
eset <- rma(affyRaw)
eset.e <- exprs(eset)
library(tidyverse)
str_sub(colnames(eset.e)[1],1,10)
colnames(eset.e) <- str_sub(colnames(eset.e),1,10)
boxplot(eset.e) #质控，查看是否需标准化

#调整pd的行名顺序与eset.e列名完全一致
p = identical(rownames(pd),colnames(eset.e));p
if(!p) eset.e = eset.e[,match(rownames(pd),colnames(eset.e))]
#2.设置分组，差异分析
group_list <- ifelse(str_detect(pd$title,"primary"),"met", "primary")
group_list <- factor(group_list,
                     levels = c("primary","met"))

design= model.matrix(~group_list)
library(limma)
fit=lmFit(hb2,design)
fit=eBayes(fit)
deg=topTable(fit,coef=2,number = Inf)

#3.加change列,标记上下调基因
logFC_t=1 
P.Value_t = 0.05
k1 = (deg$P.Value < P.Value_t)&(deg$logFC < -logFC_t)
k2 = (deg$P.Value < P.Value_t)&(deg$logFC > logFC_t)
change = ifelse(k1,"down",ifelse(k2,"up","stable"))
deg$change <- change

#4.火山图----
library(dplyr)
library(ggplot2)
dat  = deg
p <- ggplot(data = dat, 
            aes(x = logFC, 
                y = -log10(P.Value))) +
  geom_point(alpha=0.4, size=3.5, 
             aes(color=change)) +
  ylab("-log10(Pvalue)")+
  scale_color_manual(values=c("blue", "grey","red"))+
  geom_vline(xintercept=c(-logFC_t,logFC_t),lty=4,col="black",lwd=0.8) +
  geom_hline(yintercept = -log10(0.05),lty=4,col="black",lwd=0.8) +
  theme_bw()
p

##去除“///”:一个探针对应多个基因
rm(list = ls())
options(stringsAsFactors = F)
library(GEOquery)
library(tidyverse)
##下载注释信息
gpl <- getGEO("GPL96", destdir = ".") %>% 
  Table( )
save(gpl,file = "GPL96_annot.Rdata")
load("GPL96_annot.Rdata")
probe <- gpl %>% 
  select("ID", "Gene Symbol", "ENTREZ_GENE_ID")

##去除“///”:一个探针对应多个基因
if(F){
  library(tidyverse)
  probe2 <- apply(probe, 1, function(x){
    paste(x[1],
          str_split(x[2], "///", simplify = T),
          sep = "|")
  }) %>% 
    unlist()
  ###
  head(probe2)
  length(probe2)
  probe2 <- as_tibble(probe2)
  ##这里用\\进行转义，匹配分割“|”，达到分割目的
  probe2 <- probe2 %>% 
    separate(value,c("ID", "GeneName"), sep = "\\|")
  dim(probe2)
  
  ##找出重复ID，两个table的妙哟弄
  table(table(probe2$ID))
  ##筛出对应一个基因的探针
  test2 <- probe2 %>% 
    count(ID) %>% 
    filter(n == 1) %>% 
    inner_join(probe2,by = "ID") %>% 
    select(-n)
  dim(test2)
  head(test2)
  probe2 <- test2 ##将最终结果赋值给probe2
}
